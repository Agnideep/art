{"version":3,"sources":["NavBar/mosaicLogo.png","NavBar/NavBarNew.tsx","ExplorePage/SelectedArtwork.tsx","ExplorePage/ResultArtwork.tsx","ExplorePage/Options.tsx","ExplorePage/GalleryItem.tsx","ExplorePage/ListGrid.tsx","ExplorePage/ExplorePage.tsx","SearchPage/SearchControl.tsx","SearchPage/TagList.tsx","SearchPage/ResultBox.tsx","SearchPage/SearchGrid.tsx","SearchPage/SearchPage.tsx","AboutPage/AboutPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","NavBarNew","className","href","src","logo","alt","Component","SelectedArtwork","props","state","objIDs","redirect","hover","getSimilarArtID","bind","json","encodeURIComponent","JSON","stringify","imageURL","this","item","url","console","log","Http","XMLHttpRequest","FormData","append","open","apiURL","send","onreadystatechange","e","readyState","ids","parse","responseText","results","map","result","ObjectID","setState","link","jsonToURI","push","to","Stack","horizontal","horizontalAlign","verticalAlign","breakpoint","style","Text","variant","title","principal","DefaultButton","text","onClick","FacebookShareButton","quote","window","location","FacebookIcon","size","round","iconBgStyle","TwitterShareButton","TwitterIcon","LinkedinShareButton","LinkedinIcon","Image","height","onMouseEnter","onMouseLeave","CSSTransition","in","timeout","classNames","target","rel","React","ResultArtwork","urlURL","titleURL","bestItem","exploreArtUrlSuffix","dropdown","mergeStyles","marginBottom","cultureOptions","key","mediumOptions","Options","event","option","dropdowns","selectors","culture","callback","handleChange","options","medium","museum","category","Object","keys","prototype","hasOwnProperty","call","Dropdown","placeholder","label","onChange","wrap","Item","responsiveMode","ResponsiveMode","large","GalleryItem","ListGrid","grid","items","forEach","i","setSelected","selected","centerMode","infinite","centerPadding","slidesToShow","speed","swipeToSlide","adaptiveHeight","focusOnSelect","responsive","settings","slidesToScroll","initialSlide","createGrid","halfStack","width","defaultGalleryItem","defaultSelectedGalleryItem","ExplorePage","current","imageDataURI","galleryItems","collections","conditionals","addtoCollection","addCollection","changeConditional","newCurrent","thing","thing2","clonedConditionals","makeAPIquery","newSelected","updateImageDataURI","newItems","collection","newcollect","Jimp","read","then","resultImage","currentImage","resize","getWidth","getHeight","composite","crop","getBase64Async","getMIME","uri","selectedArtURL","params","element","toLowerCase","pieces","match","data","realurl","toString","selectedArt","decodeURIComponent","split","slice","selectedTitle","newGalleryItem","Helmet","property","content","grow","SearchControl","value","updateTerms","type","TagList","selectAndApplyFilters","activeFilters","name","has","clearActiveFilters","entries","facets","nameFacetEntries","Fragment","facetInfo","id","checked","isChecked","onCheckboxChange","htmlFor","count","ResultBox","Thumbnail_Url","Title","Card","Link_Resource","throttle","offset","CircularProgress","color","imageFit","ImageFit","contain","length","substring","Department","SearchGrid","Object_ID","facetNames","SearchPage","terms","searchFields","uriToJSON","executeSearch","col","values","join","updateFacets","query","f","filtersToSearch","filter","val","filterTerm","self","fetch","headers","response","responseJson","urijson","newTerms","a","b","Set","af","includes","delete","add","Separator","vertical","pivotStyles","linkIsSelected","backgroundColor","fontWeight","borderBottom","AboutPage","Pivot","styles","aria-label","linkFormat","PivotLinkFormat","tabs","linkSize","PivotLinkSize","PivotItem","headerText","initializeIcons","btmMargin","App","basename","process","role","exact","path","component","Boolean","hostname","margin","padding","ReactDOM","render","Customizer","FluentCustomizations","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5a78f951.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mosaicLogo.961911a0.png\";","import React, { Component } from 'react';\r\nimport logo from './mosaicLogo.png';\r\n\r\n/**\r\n * The Navigational Bar across the top of the page\r\n */\r\ninterface IProps {\r\n\r\n};\r\n\r\ninterface IState {\r\n\r\n};\r\n\r\n\r\nclass NavBarNew extends Component<IProps, IState> {\r\n\r\n    render() {\r\n        return (\r\n          <nav className=\"nav\">\r\n            <a className=\"nav__link\" href=\"/\">\r\n              <img src={logo} alt=\"\"/>\r\n            </a>\r\n            <a className=\"nav__link\" href=\"/about\">\r\n              <div className=\"nav__text\">\r\n                Learn More\r\n              </div>\r\n            </a>\r\n          </nav>   \r\n        )\r\n    };\r\n\r\n}\r\n\r\nexport default NavBarNew;","import React from 'react';\r\n\r\nimport { Image, Text, Stack, DefaultButton, mergeStyles } from 'office-ui-fabric-react';\r\nimport GalleryItem from './GalleryItem';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { FacebookShareButton, FacebookIcon, TwitterShareButton, TwitterIcon, LinkedinShareButton, LinkedinIcon } from 'react-share';\r\nimport { HideAt, ShowAt } from 'react-with-breakpoints';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\ninterface IState {\r\n  objIDs: any,\r\n  redirect: any,\r\n  hover: boolean\r\n}\r\n\r\ntype ArtworkProps = {\r\n  item: GalleryItem\r\n}\r\n\r\nclass SelectedArtwork extends React.Component<ArtworkProps, IState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      objIDs: [],\r\n      redirect: false,\r\n      hover: false\r\n    };\r\n    this.getSimilarArtID = this.getSimilarArtID.bind(this);\r\n  }\r\n\r\n  jsonToURI(json: any) { return encodeURIComponent(JSON.stringify(json)); }\r\n\r\n  getSimilarArtID() {\r\n    let imageURL = this.props.item.url;\r\n\r\n    console.log(imageURL);\r\n\r\n    const apiURL = 'https://gen-studio-apim.azure-api.net/met-reverse-search-2/FindSimilarImages/url';\r\n    const key = '?subscription-key=7c02fa70abb8407fa552104e0b460c50&neighbors=20';\r\n    const Http = new XMLHttpRequest();\r\n    const data = new FormData();\r\n    data.append('urlInput', imageURL);\r\n\r\n    Http.open('POST', apiURL + key);\r\n    //Http.send(data);\r\n    Http.send(JSON.stringify({ \"urlInput\": imageURL }));\r\n    Http.onreadystatechange = e => {\r\n      if (Http.readyState === 4) {\r\n        try {\r\n          let response = JSON.parse(Http.responseText);\r\n          let ids = response.results.map((result: any) => result.ObjectID);\r\n          this.setState({\r\n            \"objIDs\": ids,\r\n            \"redirect\": true,\r\n          });\r\n        } catch (e) {\r\n          console.log('malformed request:' + Http.responseText);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      let link = `/search/${this.jsonToURI(this.state.objIDs)}`;\r\n      return <Redirect push to={link} />;\r\n\r\n    } else {\r\n      return (\r\n        <Stack horizontal horizontalAlign=\"end\" verticalAlign=\"center\" className=\"explore__main-images\">\r\n          <HideAt breakpoint=\"mediumAndBelow\">\r\n            <Stack verticalAlign=\"end\" style={{ \"marginRight\": 10 }}>\r\n              <Text style={{ \"textAlign\": \"right\", \"fontWeight\": \"bold\" }} variant=\"xLarge\">{this.props.item.title}</Text>\r\n              <Text style={{ \"textAlign\": \"right\" }} variant=\"large\">{this.props.item.principal}</Text>\r\n              <Stack>\r\n                <DefaultButton className=\"explore__buttons button\" text=\"Search Similar\" onClick={this.getSimilarArtID} />\r\n                <DefaultButton className=\"explore__buttons button\" text=\"View Source\" />\r\n                <Stack horizontal horizontalAlign=\"end\">\r\n                  <FacebookShareButton className=\"explore__share-button\" quote=\"Check out Mosaic!\" url={window.location.href}>\r\n                    <FacebookIcon size={35} round={true} iconBgStyle={{ \"fill\": \"black\" }} />\r\n                  </FacebookShareButton>\r\n                  <TwitterShareButton className=\"explore__share-button\" title=\"Check out Mosaic!\" url={window.location.href}>\r\n                    <TwitterIcon size={35} round={true} iconBgStyle={{ \"fill\": \"black\" }} />\r\n                  </TwitterShareButton>\r\n                  <LinkedinShareButton className=\"explore__share-button\" url={window.location.href}>\r\n                    <LinkedinIcon size={35} round={true} iconBgStyle={{ \"fill\": \"black\" }} />\r\n                  </LinkedinShareButton>\r\n                </Stack>\r\n              </Stack>\r\n            </Stack>\r\n            <Stack>\r\n              <Image height={\"40vh\"} src={this.props.item.url} className=\"explore__img\"/>\r\n              <Text style={{ \"textAlign\": \"center\", \"fontWeight\": \"bold\" }} variant=\"large\">Original</Text>\r\n            </Stack>\r\n          </HideAt>\r\n          <ShowAt breakpoint=\"mediumAndBelow\">\r\n            <Stack>\r\n              <div className=\"explore__img-container\" onMouseEnter={() => this.setState({ hover: true })} onMouseLeave={() => this.setState({ hover: false })}>\r\n                <Image height={\"300px\"} src={this.props.item.url} />\r\n                <CSSTransition in={this.state.hover} timeout={0} classNames=\"explore__slide\">\r\n                  <Stack horizontal className=\"explore__slide-buttons\">\r\n                    <a onClick={this.getSimilarArtID} className=\"explore__slide-button-link\">Search</a>\r\n                    <div className=\"explore__slide-button-sep\"></div>\r\n                    <a href=\"\" className=\"explore__slide-button-link\" target=\"_blank\" rel=\"noopener noreferrer\">Details</a>\r\n                  </Stack>\r\n                </CSSTransition>\r\n              </div>\r\n              <Text style={{ \"textAlign\": \"center\", \"fontWeight\": \"bold\" }} variant=\"large\">Original</Text>\r\n            </Stack>\r\n          </ShowAt>\r\n        </Stack>\r\n      )\r\n    }\r\n  }\r\n};\r\n\r\nexport default SelectedArtwork;","import React from 'react';\r\n\r\nimport { Image, Text, Stack, DefaultButton, mergeStyles } from 'office-ui-fabric-react';\r\nimport GalleryItem from './GalleryItem';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { ShowAt, HideAt } from 'react-with-breakpoints';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\ninterface IState {\r\n  objIDs: any,\r\n  redirect: any,\r\n  hover: boolean\r\n}\r\n\r\ntype ArtworkProps = {\r\n  item: GalleryItem,\r\n  bestItem: GalleryItem\r\n}\r\n\r\nclass ResultArtwork extends React.Component<ArtworkProps, IState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      objIDs: [],\r\n      redirect: false,\r\n      hover: false\r\n    };\r\n    this.getSimilarArtID = this.getSimilarArtID.bind(this);\r\n  }\r\n\r\n  jsonToURI(json: any) { return encodeURIComponent(JSON.stringify(json)); }\r\n\r\n  getSimilarArtID() {\r\n    let imageURL = this.props.item.url;\r\n\r\n    const apiURL = 'https://gen-studio-apim.azure-api.net/met-reverse-search-2/FindSimilarImages/url';\r\n    const key = '?subscription-key=7c02fa70abb8407fa552104e0b460c50&neighbors=20';\r\n    const Http = new XMLHttpRequest();\r\n    const data = new FormData();\r\n    data.append('urlInput', imageURL);\r\n\r\n    Http.open('POST', apiURL + key);\r\n    //Http.send(data);\r\n    Http.send(JSON.stringify({ \"urlInput\": imageURL }));\r\n    Http.onreadystatechange = e => {\r\n      if (Http.readyState === 4) {\r\n        try {\r\n          let response = JSON.parse(Http.responseText);\r\n          let ids = response.results.map((result: any) => result.ObjectID);\r\n          this.setState({\r\n            \"objIDs\": ids,\r\n            \"redirect\": true,\r\n          });\r\n        } catch (e) {\r\n          console.log('malformed request:' + Http.responseText);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  exploreArtUrlSuffix() {\r\n    let urlBase = '/';\r\n\r\n    //let urlURL = '?url=' + thumbnailRoot + this.state.selectedImage.id.toString() + \".jpg\";\r\n    let urlURL = '?url=' + this.props.item.url;\r\n    let titleURL = '&title=' + this.props.item.title;\r\n    let url = encodeURIComponent(urlURL + titleURL);\r\n    return urlBase + url;\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    let  logo = <Image height={\"30px\"} src={\"../images/Rijks.jpg\"} />\r\n\r\n    if (this.state.redirect) {\r\n      let link = `/search/${this.jsonToURI(this.state.objIDs)}`;\r\n      return <Redirect push to={link} />;\r\n    } else {\r\n\r\n      return (\r\n        <Stack horizontal horizontalAlign=\"start\" verticalAlign=\"center\" className=\"explore__main-images\">\r\n          <HideAt breakpoint=\"mediumAndBelow\">\r\n            <Stack>\r\n              <Image height={\"40vh\"} src={this.props.item.url} className=\"explore__img\" />\r\n              <Text style={{ \"textAlign\": \"center\", \"fontWeight\": \"bold\" }} variant=\"large\">{this.props.item.url === this.props.bestItem.url ? \"Best Match\" : \"Close Match\"}</Text>\r\n            </Stack>\r\n            <Stack style={{ \"marginLeft\": 10 }}>\r\n              <Text style={{ \"fontWeight\": \"bold\" }} variant=\"xLarge\">{this.props.item.title}</Text>\r\n              <Text variant=\"large\">{this.props.item.principal}</Text>\r\n              <Stack>\r\n                <DefaultButton className=\"explore__buttons button\" text=\"Search Similar\" onClick={this.getSimilarArtID} />\r\n                <DefaultButton className=\"explore__buttons button\" text=\"View Source\" />\r\n                <DefaultButton className=\"explore__buttons button\" text=\"Find Related\" href={this.exploreArtUrlSuffix()} />\r\n              </Stack>\r\n            </Stack>\r\n          </HideAt>\r\n          <ShowAt breakpoint=\"mediumAndBelow\">\r\n            <Stack>\r\n            <div className=\"explore__img-container\" onMouseEnter={() => this.setState({ hover: true })} onMouseLeave={() => this.setState({ hover: false })}>\r\n                <Image height={\"300px\"} src={this.props.item.url} />\r\n                <CSSTransition in={this.state.hover} timeout={0} classNames=\"explore__slide\">\r\n                  <Stack horizontal className=\"explore__slide-buttons\">\r\n                    <a onClick={this.getSimilarArtID} className=\"explore__slide-button-link\">Search</a>\r\n                    <div className=\"explore__slide-button-sep\"></div>\r\n                    <a href={this.exploreArtUrlSuffix()} className=\"explore__slide-button-link\">Related</a>\r\n                    <div className=\"explore__slide-button-sep\"></div>\r\n                    <a href=\"\" className=\"explore__slide-button-link\" target=\"_blank\" rel=\"noopener noreferrer\">Details</a>\r\n                  </Stack>\r\n                </CSSTransition>\r\n              </div>\r\n              <Text style={{ \"textAlign\": \"center\", \"fontWeight\": \"bold\" }} variant=\"large\">{this.props.item.url === this.props.bestItem.url ? \"Best Match\" : \"Close Match\"}</Text>\r\n            </Stack>\r\n          </ShowAt>\r\n        </Stack>\r\n      )\r\n    }\r\n  }\r\n};\r\n\r\nexport default ResultArtwork;","import React from 'react';\r\nimport { Text, Stack, Dropdown, IDropdownOption, ResponsiveMode } from 'office-ui-fabric-react';\r\nimport { mergeStyles } from '@uifabric/merge-styles';\r\n\r\nconst dropdown = mergeStyles({\r\n    marginBottom : 10\r\n});\r\n\r\ninterface IState {};\r\n\r\n// Expected props\r\ninterface IProps {\r\n  // Potentially pass in a object of the selector options from parent (culture, medium, etc)?\r\n  options? : Object,\r\n  // Functions for updating state in parent when changing filters\r\n  callback : any\r\n}\r\n\r\ninterface IState {};\r\n\r\n// const dropdownStyles: Partial<IDropdownStyles> = {\r\n//   dropdown: { width:300 }\r\n// }\r\n\r\n// Options for filtering the art culture\r\nconst cultureOptions: IDropdownOption[] = [\r\n    { key: 'cultureChinese', text: 'Chinese' },\r\n    { key: 'cultureAmerican', text: 'American' },\r\n    { key: 'cultureBritish', text: 'British' },\r\n    { key: 'cultureKorean', text: 'Korean' }\r\n];\r\n\r\n// Options for filtering the art medium\r\nconst mediumOptions: IDropdownOption[] = [\r\n    { key: 'mediumPainting', text: 'Painting'},\r\n    { key: 'mediumSculpture', text: 'Sculpture'},\r\n    { key: 'mediumPottery', text: 'Pottery'},\r\n    { key: 'mediumArmor', text: 'Armor'}\r\n];\r\n\r\n// Options for filtering the museum\r\nconst museumOptions: IDropdownOption[] = [\r\n  { key: 'museumAll', text: 'All Museums'},\r\n  { key: 'museumMet', text: 'Metropolitan Museum of Art'},\r\n  { key: 'museumRijks', text: 'Rijksmuseum'}\r\n];\r\n\r\nclass Options extends React.Component<IProps, IState> {\r\n\r\n  // Debugging purposes, unnecessary\r\n  private handleChange(event : React.FormEvent<HTMLDivElement>, option?: IDropdownOption): void {\r\n    console.log(option)\r\n  }\r\n\r\n  // TODO: Planned on building up a set of dropdowns inputs in case we need\r\n  // to easily add more options besides culture and medium\r\n  private createDropdowns(): JSX.Element[] {\r\n    let dropdowns: JSX.Element[] = [];\r\n\r\n    let selectors: Object = {\r\n      culture: {\r\n        callback: this.handleChange,\r\n        options: ['Chinese', 'American', 'British', 'Korean']\r\n      },\r\n      medium: {\r\n        callback: this.handleChange,\r\n        options: ['Painting', 'Sculpture', 'Pottery', 'Armor']\r\n      },\r\n      museum: {\r\n        callback: this.handleChange,\r\n        options: ['All', 'Metropolitan Museum of Art', 'Rijksmuseum']\r\n      }\r\n    };\r\n\r\n    for (let category in Object.keys(selectors)) {\r\n      if (Object.prototype.hasOwnProperty.call(selectors, category)) {\r\n        dropdowns.push(\r\n          <Dropdown\r\n              placeholder={\"Select \" + category}\r\n              label={category}\r\n              options={cultureOptions}\r\n              className={dropdown}\r\n              onChange={this.props.callback}\r\n            />\r\n        )\r\n      }\r\n    }\r\n\r\n    return dropdowns;\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Stack>\r\n        <Text style={{\"textAlign\":\"center\", \"fontWeight\":\"bold\"}} variant=\"xLarge\">Artwork Qualities</Text>\r\n        <Stack horizontal className=\"explore__options-container\" horizontalAlign=\"center\" wrap>\r\n          <Stack.Item className=\"explore__dropdown\">\r\n            <Dropdown\r\n              placeholder={\"Select Culture\"}\r\n              label={\"Culture\"}\r\n              options={cultureOptions}\r\n              responsiveMode={ResponsiveMode.large}\r\n              onChange={( event:any, option:any ) => this.props.callback(\"Culture\", option)}\r\n            />\r\n          </Stack.Item>\r\n          <Stack.Item className=\"explore__dropdown\">\r\n            <Dropdown\r\n              placeholder={\"Select Medium\"}\r\n              label={\"Medium\"}\r\n              options={mediumOptions}\r\n              responsiveMode={ResponsiveMode.large}\r\n              onChange={( event:any, option:any ) => this.props.callback(\"Medium\", option)}\r\n            />\r\n          </Stack.Item>\r\n          <Stack.Item className=\"explore__dropdown\">\r\n            <Dropdown\r\n              placeholder={\"Select Museum\"}\r\n              label={\"Museum\"}\r\n              options={mediumOptions}\r\n              responsiveMode={ResponsiveMode.large}\r\n            />\r\n          </Stack.Item>\r\n        </Stack>\r\n      </Stack>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Options","export default class GalleryItem {\r\n  url: string;\r\n  title: string;\r\n  principal: string;\r\n\r\n  constructor(url: string, title: string, principal: string) {\r\n    this.url = url;\r\n    this.title = title;\r\n    this.principal = principal;\r\n  }\r\n}","import React from 'react';\r\nimport GalleryItem from './GalleryItem';\r\nimport Slider from 'react-slick';\r\n\r\ninterface IProps {\r\n    items: GalleryItem[],\r\n    setSelected: (item: GalleryItem) => void,\r\n    selected: GalleryItem\r\n}\r\n\r\ninterface IState {\r\n\r\n}\r\n\r\nclass ListGrid extends React.Component<IProps, IState> {\r\n    // constructor(props: IProps) {\r\n    //     super(props);\r\n    // }\r\n\r\n    createGrid(): JSX.Element[] {\r\n        let grid: JSX.Element[] = [];\r\n\r\n        this.props.items.forEach((item: GalleryItem, i: number) => {\r\n            grid.push(\r\n                <div className=\"explore__card-img-container\" key={i} onClick={()=>this.props.setSelected(item)}>\r\n                    <img alt={item.title} className=\"explore__card-img\" style={item.url === this.props.selected.url ? {\"border\":\"4px solid black\"} : {\"border\":\"4px solid white\"}} src={item.url}/>\r\n                </div>\r\n            );\r\n        })\r\n\r\n        return grid;\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        const settings = {\r\n            centerMode: true,\r\n            infinite: true,\r\n            centerPadding: '60px',\r\n            slidesToShow: 6,\r\n            speed: 500,\r\n            swipeToSlide: true,\r\n            adaptiveHeight: true,\r\n            focusOnSelect: true,\r\n            responsive: [\r\n              {\r\n                breakpoint: 1650,\r\n                settings: {\r\n                  slidesToShow: 5,\r\n                  slidesToScroll: 5,\r\n                  infinite: true,\r\n                }\r\n              },\r\n              {\r\n                breakpoint: 1440,\r\n                settings: {\r\n                  slidesToShow: 3,\r\n                  slidesToScroll: 3,\r\n                  infinite: true\r\n                }\r\n              },\r\n              {\r\n                breakpoint: 980,\r\n                settings: {\r\n                  slidesToShow: 2,\r\n                  slidesToScroll: 2,\r\n                  initialSlide: 2\r\n                }\r\n              },\r\n              {\r\n                breakpoint: 640,\r\n                settings: {\r\n                  slidesToShow: 1,\r\n                  slidesToScroll: 1\r\n                }\r\n              }\r\n            ]\r\n          };\r\n\r\n        return (\r\n            <div className=\"explore__grid-list-container\">\r\n                <Slider {...settings}>{this.createGrid()}</Slider>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListGrid;","import React from 'react';\r\nimport { Stack, Separator, mergeStyles } from 'office-ui-fabric-react';\r\nimport SelectedArtwork from './SelectedArtwork';\r\nimport ResultArtwork from './ResultArtwork';\r\nimport Options from './Options';\r\nimport GalleryItem from './GalleryItem';\r\nimport ListGrid from './ListGrid';\r\nimport { HideAt, ShowAt } from 'react-with-breakpoints';\r\nimport { FacebookShareButton, FacebookIcon, TwitterShareButton, TwitterIcon, LinkedinShareButton, LinkedinIcon } from 'react-share';\r\nimport { Helmet } from 'react-helmet';\r\nimport Jimp from 'jimp';\r\n\r\ninterface IProps {\r\n    match: any\r\n};\r\n\r\ninterface IState {\r\n    current: GalleryItem,\r\n    selected: GalleryItem,\r\n    bestItem: GalleryItem,\r\n    imageDataURI: string;\r\n    galleryItems: GalleryItem[],\r\n    collections: any,\r\n    conditionals: any,\r\n    url: any\r\n}\r\n\r\nconst halfStack = mergeStyles({\r\n    width: \"50%\",\r\n    height: \"100%\"\r\n})\r\n\r\nconst defaultGalleryItem = new GalleryItem(\r\n    \"https://lh3.googleusercontent.com/J-mxAE7CPu-DXIOx4QKBtb0GC4ud37da1QK7CzbTIDswmvZHXhLm4Tv2-1H3iBXJWAW_bHm7dMl3j5wv_XiWAg55VOM=s0\",\r\n    \"The Night Watch\",\r\n    \"Rembrandt van Rijn\"\r\n);\r\n\r\nconst defaultSelectedGalleryItem = new GalleryItem(\r\n    \"https://upload.wikimedia.org/wikipedia/commons/a/a4/The_Peacemakers_1868.jpg\",\r\n    \"The Peacemakers\",\r\n    \"George Peter Alexander Healy\"\r\n)\r\n\r\nexport class ExplorePage extends React.Component<IProps, IState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            current: defaultGalleryItem,\r\n            selected: defaultSelectedGalleryItem,\r\n            bestItem: defaultSelectedGalleryItem,\r\n            imageDataURI: \"\",\r\n            galleryItems: [defaultGalleryItem, defaultGalleryItem, defaultGalleryItem, defaultGalleryItem, defaultGalleryItem, defaultGalleryItem, defaultGalleryItem, defaultGalleryItem, defaultGalleryItem, defaultGalleryItem],\r\n            collections: { 'Collection 1': [defaultGalleryItem], 'Collection 2': [defaultGalleryItem, defaultGalleryItem] },\r\n            conditionals: { 'Culture': 'All', 'Medium': \"All\" },\r\n            url: ''\r\n        }\r\n        this.setSelected = this.setSelected.bind(this);\r\n        this.addtoCollection = this.addtoCollection.bind(this);\r\n        this.addCollection = this.addCollection.bind(this);\r\n        this.changeConditional = this.changeConditional.bind(this);\r\n    }\r\n\r\n    setCurrent(newCurrent: GalleryItem): void {\r\n        this.setState({ \"current\": newCurrent });\r\n    }\r\n\r\n    changeConditional(thing: any, thing2?: any): void {\r\n        let clonedConditionals = { ...this.state.conditionals };\r\n        clonedConditionals[thing] = thing2['text'];\r\n        console.log(clonedConditionals);\r\n        this.setState({ \"conditionals\": clonedConditionals });\r\n        this.makeAPIquery(this.state.current.url, clonedConditionals);\r\n    }\r\n\r\n    setSelected(newSelected: GalleryItem): void {\r\n        this.setState({ \"selected\": newSelected }, this.updateImageDataURI);\r\n    }\r\n\r\n    setGalleryItems(newItems: GalleryItem[]): void {\r\n        this.setState({ \"galleryItems\": newItems });\r\n    }\r\n\r\n    addtoCollection(collection: string): void {\r\n        let newcollect = { ...this.state.collections };\r\n        newcollect[collection].push(this.state.current);\r\n        this.setState({ 'collections': newcollect });\r\n    }\r\n\r\n    addCollection(collection: string): void {\r\n        let newcollect = { ...this.state.collections };\r\n        newcollect[collection] = [this.state.current];\r\n        this.setState({ 'collections': newcollect });\r\n    }\r\n\r\n    updateImageDataURI() {\r\n        let imageHeight = 200;\r\n\r\n        Jimp.read(this.state.selected.url)\r\n            .then(resultImage => {\r\n                Jimp.read(this.state.current.url)\r\n                    .then(currentImage => {\r\n                        resultImage.resize(resultImage.getWidth()*imageHeight/resultImage.getHeight(),imageHeight)\r\n                        .composite(currentImage.resize(currentImage.getWidth()*imageHeight/currentImage.getHeight(),imageHeight), resultImage.getWidth()*imageHeight/resultImage.getHeight(), 0)                        \r\n                        .crop(0, 0, currentImage.getWidth()*imageHeight/currentImage.getHeight() + resultImage.getWidth()*imageHeight/resultImage.getHeight(), imageHeight)\r\n                        .getBase64Async(resultImage.getMIME())\r\n\r\n                        // resultImage.resize(200, 200).crop(0,0,400,200).composite(currentImage.resize(200, 200), 200, 0).getBase64Async(resultImage.getMIME())\r\n                            .then(uri => {\r\n                                console.log(uri)\r\n                                this.setState({imageDataURI: uri})\r\n                            })\r\n                    })\r\n            })\r\n    }\r\n\r\n    componentWillMount() {\r\n        // const api_key = process.env.REACT_APP_RIJKSMUSEUM_API_KEY;\r\n        // const url = `https://www.rijksmuseum.nl/api/en/collection?key=${api_key}&ps=9`;\r\n\r\n        // fetch(url)\r\n        //     .then((res) => {\r\n        //         return res.json();\r\n        //     })\r\n        //     .then((resJson: any) => {\r\n        //         let newItems: GalleryItem[] = [];\r\n        //         resJson.artObjects.forEach((obj:any) => {\r\n        //             newItems.push(new GalleryItem(obj.webImage.url, obj.title, obj.principalOrFirstMaker));\r\n        //         });\r\n        //         this.setGalleryItems(newItems);\r\n        //     });\r\n    }\r\n\r\n    makeAPIquery(selectedArtURL: any, conditionals: any) {\r\n        // const apiURL = 'http://art-backend.azurewebsites.net/explore';\r\n        const apiURL = 'https://extern2020apim.azure-api.net/explore';\r\n        let params = '?url=' + selectedArtURL + '&numResults=' + '9';\r\n\r\n        let fields = Object.keys(conditionals);\r\n        fields.forEach((element: any) => {\r\n            if (conditionals[element] !== \"All\") {\r\n                params = params + '&' + element.toLowerCase() + '=' + conditionals[element];\r\n            }\r\n        });\r\n\r\n        //let params = '?id=2738' + '&museum=' + 'rijks' + '&numResults=' + '10'\r\n\r\n        const Http = new XMLHttpRequest();\r\n        Http.open('GET', apiURL + params);\r\n\r\n        Http.send();\r\n        Http.onreadystatechange = e => {\r\n            if (Http.readyState === 4) {\r\n                try {\r\n                    let response = JSON.parse(Http.responseText);\r\n                    //let ids = response.results.map((result:any) => result.ObjectID);\r\n                    let pieces = response.map((result: any) => new GalleryItem(\r\n                        result[\"img_url\"],\r\n                        result[\"title\"],\r\n                        result[\"museum\"]\r\n                    ));\r\n\r\n                    this.setState({ \"galleryItems\": pieces, \"selected\": pieces[0], \"bestItem\": pieces[0] });\r\n\r\n\r\n\r\n                } catch (e) {\r\n                    console.log('malformed request:' + Http.responseText);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //Decode the url data\r\n        let url = this.props.match.params.data\r\n        if (url) {\r\n            let realurl = url.toString();\r\n            realurl = decodeURIComponent(realurl);\r\n            let selectedArt = realurl.split(\"&\")[0].slice(5); //gives url of artwork\r\n            let selectedTitle = realurl.split(\"&\")[1].slice(6); //gives title of artwork\r\n            //Continue with other params as desired\r\n            //const paintingUrl = thumbnailRoot + selectedArt + \".jpg\";\r\n            const paintingUrl = selectedArt;\r\n            let newGalleryItem = new GalleryItem(\r\n                paintingUrl,\r\n                selectedTitle,\r\n                \"WHO who, WHO who\"\r\n            );\r\n\r\n            this.makeAPIquery(selectedArt, this.state.conditionals);\r\n\r\n\r\n            this.setState({ \"current\": newGalleryItem });\r\n        } else {\r\n            let selectedArt = 'https://lh3.googleusercontent.com/ib8SNTK2Qk-z64UYuu-_mI3FswMpYmmNU871wu5diDEPyjxmYJcNI4qRtqxlvKkVnrXTAxAFkuHX7DAN9ZwPFzS5fGE=s0';\r\n            let selectedTitle = \"Lady who says 'who'\";\r\n\r\n            const paintingUrl = selectedArt;\r\n            let newGalleryItem = new GalleryItem(\r\n                paintingUrl,\r\n                selectedTitle,\r\n                \"WHO who, WHO who\"\r\n            );\r\n\r\n            this.makeAPIquery(selectedArt, this.state.conditionals);\r\n\r\n\r\n            this.setState({ \"current\": newGalleryItem });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Stack>\r\n                <Helmet>\r\n                    <meta property=\"og:image\" content={this.state.imageDataURI} />\r\n                </Helmet>\r\n                <HideAt breakpoint=\"mediumAndBelow\">\r\n                    <Stack horizontal>\r\n                        <Stack.Item className={halfStack} grow={1}>\r\n                            <SelectedArtwork item={this.state.current} />\r\n                        </Stack.Item>\r\n                        <Stack.Item className={halfStack} grow={1}>\r\n                            <ResultArtwork item={this.state.selected} bestItem={this.state.bestItem} />\r\n                        </Stack.Item>\r\n                    </Stack>\r\n                </HideAt>\r\n                <ShowAt breakpoint=\"mediumAndBelow\">\r\n                    <Stack horizontal horizontalAlign=\"space-around\" wrap>\r\n                        <Stack.Item grow={1}>\r\n                            <SelectedArtwork item={this.state.current} />\r\n                        </Stack.Item>\r\n                        <Stack.Item grow={1}>\r\n                            <ResultArtwork item={this.state.selected} bestItem={this.state.bestItem} />\r\n                        </Stack.Item>\r\n                    </Stack>\r\n                    <Stack horizontal horizontalAlign=\"center\">\r\n                        <FacebookShareButton className=\"explore__share-button\" quote=\"Check out Mosaic!\" url={window.location.href}>\r\n                            <FacebookIcon size={35} round={true} iconBgStyle={{ \"fill\": \"black\" }} />\r\n                        </FacebookShareButton>\r\n                        <TwitterShareButton className=\"explore__share-button\" title=\"Check out Mosaic!\" url={window.location.href}>\r\n                            <TwitterIcon size={35} round={true} iconBgStyle={{ \"fill\": \"black\" }} />\r\n                        </TwitterShareButton>\r\n                        <LinkedinShareButton className=\"explore__share-button\" url={window.location.href}>\r\n                            <LinkedinIcon size={35} round={true} iconBgStyle={{ \"fill\": \"black\" }} />\r\n                        </LinkedinShareButton>\r\n                    </Stack>\r\n                </ShowAt>\r\n                <div style={{ \"width\": \"100%\", \"height\": \"1px\", \"backgroundColor\": \"gainsboro\", \"margin\": \"15px 0px\" }}></div>\r\n                <Stack.Item>\r\n                    <Options callback={this.changeConditional} />\r\n                </Stack.Item>\r\n                <Stack.Item>\r\n                    <ListGrid items={this.state.galleryItems} setSelected={this.setSelected} selected={this.state.selected} />\r\n                </Stack.Item>\r\n            </Stack>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExplorePage\r\n","import React, { Component } from 'react';\r\n\r\ninterface IProps{\r\n    updateTerms: any\r\n};\r\n\r\ninterface IState {\r\n    value: any\r\n}\r\n\r\nexport default class SearchControl extends Component<IProps, IState> {\r\n  constructor(props:any) {\r\n    super(props);\r\n    this.state = {\r\n      value: '',\r\n    };\r\n  }\r\n\r\n  onChange = (event:any) => {\r\n    this.setState({ value: event.target.value });\r\n    this.props.updateTerms([event.target.value]);\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state.value;\r\n    return <input className=\"search__input\" type=\"search\" value={value} placeholder=\"Search\" onChange={this.onChange} />;\r\n  }\r\n}","import React, { Component, ChangeEvent } from 'react';\r\nimport { DefaultButton} from 'office-ui-fabric-react';\r\n\r\ninterface IProps {\r\n    activeFilters:any,\r\n    facets:any,\r\n    clearActiveFilters:any,\r\n    selectAndApplyFilters:any\r\n}\r\n\r\n\r\n/**\r\n * List of tags that can be used to filter results\r\n */\r\nexport default class TagList extends Component<IProps> {\r\n  constructor(props:any) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  /**\r\n   * Handles filter updates related to a checkbox change\r\n   * @param event the triggered checkbox event\r\n   * @param category the category of the filter to update (e.g. Culture, Department)\r\n   * @param value the specific filter to toggle (e.g. French, Sculptures)\r\n   */\r\n  onCheckboxChange(event:ChangeEvent, category: any, value: any) {\r\n    this.props.selectAndApplyFilters(category, value);\r\n  }\r\n\r\n  /**\r\n   * Returns if a filter is active based on state in the parent\r\n   * @param activeFilters object containing the current active filters\r\n   * @param name the category of the filter to check (e.g. Culture, Department)\r\n   * @param value the specific filter to toggle (e.g. French, Sculptures)\r\n   */\r\n  isChecked(activeFilters:any, name:string, value:string) {\r\n    return activeFilters[name] != null && activeFilters[name].has(value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search__section\">\r\n        <DefaultButton className=\"search__button\" text=\"Clear Filters\" onClick={this.props.clearActiveFilters} />\r\n        {Object.entries(this.props.facets).map((nameFacetEntries:any,) => \r\n          <React.Fragment>\r\n            <div className=\"search__row_category\" ><b>{nameFacetEntries[0]}</b></div> \r\n            {nameFacetEntries[1].map((facetInfo:any) =>\r\n              <div className=\"search__row\" key={facetInfo.value} >\r\n                <input \r\n                  className=\"search__checkbox\"\r\n                  type=\"checkbox\" id={facetInfo.value}\r\n                  checked={this.isChecked(this.props.activeFilters, nameFacetEntries[0], facetInfo.value)}\r\n                  // onChange={e => this.onChange(e, nameFacetEntries[0], facetInfo.value)} />\r\n                  onChange={e => this.onCheckboxChange(e, nameFacetEntries[0], facetInfo.value)} />\r\n                <label className=\"search__label\" htmlFor={facetInfo.value}>{facetInfo.value + ` (${facetInfo.count})`}</label>\r\n              </div>\r\n            )}\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Stack, ImageFit, Image } from 'office-ui-fabric-react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport LazyLoad from 'react-lazyload';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport { Card } from '@uifabric/react-cards';\r\n\r\ninterface IProps {\r\n    key: any,\r\n    data: any\r\n}\r\n\r\ninterface IState {\r\n  hover: boolean\r\n}\r\n\r\n/**\r\n * One box in the Result Grid\r\n * 'data' prop: json object from azure search index {@search.score, ObjectID, Department, Title, Culture, Medium, Classification, LinkResource, PrimaryImageUrl, Neighbors}\r\n */\r\nexport default class ResultBox extends Component<IProps, IState> {\r\n  constructor(props:any) {\r\n    super(props);\r\n    this.state = {\r\n      hover: false\r\n    };\r\n  }\r\n\r\n  exploreArtUrlSuffix() {\r\n    let urlBase = '/';\r\n    let url = '?url=' + this.props.data.Thumbnail_Url + '&title='+this.props.data.Title;\r\n    url = encodeURIComponent(url);\r\n    return urlBase + url;\r\n  }\r\n\r\n  render() {    \r\n    return (\r\n      <Card className=\"grid-card\" onMouseEnter={()=>this.setState({hover:true})} onMouseLeave={()=>this.setState({hover:false})}>\r\n        <Card.Item className=\"grid-card__link\">\r\n          <a href={this.props.data.Link_Resource} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <LazyLoad\r\n              throttle={250}\r\n              height={200}\r\n              offset={1000}\r\n              placeholder={<CircularProgress style={{ color: '#6A6A6A' }} />}\r\n              >\r\n                <Image className=\"grid-card__img\" alt=\"thumbnail\" src={this.props.data.Thumbnail_Url} imageFit={ImageFit.contain} />\r\n              </LazyLoad>\r\n          </a>\r\n        </Card.Item>\r\n        <Card.Item className=\"grid-card__title\">\r\n          <div>{!this.props.data.Title ?\r\n                \"Untitled Piece\" :\r\n                this.props.data.Title.length < 55 ? this.props.data.Title : this.props.data.Title.substring(0,55) + \"...\"}</div>\r\n        </Card.Item>\r\n        <Card.Item className=\"grid-card__text\">\r\n          <div>{!this.props.data.Department ? \"No description\" : this.props.data.Department}</div>\r\n        </Card.Item>\r\n        <Card.Item>\r\n        <CSSTransition in={this.state.hover} timeout={0} classNames=\"grid-card__slide\">\r\n            <Stack horizontal className=\"grid-card__buttons\">\r\n              <a href={this.exploreArtUrlSuffix()} className=\"grid-card__button_link\">Relatives</a>\r\n              <div className=\"grid-card__button_sep\"></div>\r\n              <a href={this.props.data.Link_Resource} className=\"grid-card__button_link\" target=\"_blank\" rel=\"noopener noreferrer\">Details</a>\r\n            </Stack>\r\n        </CSSTransition>\r\n        </Card.Item>\r\n      </Card>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Stack } from 'office-ui-fabric-react';\r\nimport ResultBox from './ResultBox';\r\n\r\ninterface IProps{\r\n    results: any\r\n};\r\n\r\n/**\r\n * Grid used to display results of a search\r\n * 'results' prop: an array of the json results from the Azure search (the 'value' value)\r\n */\r\nexport default class SearchGrid extends Component<IProps> {\r\n  render() {\r\n    return (\r\n      <Stack horizontal wrap className=\"search__grid\">\r\n        {this.props.results.map( (result:any) => (\r\n          <ResultBox key={result.Object_ID} data={result} />\r\n        ))}\r\n      </Stack>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport {Stack, Separator} from 'office-ui-fabric-react';\r\nimport SearchControl from './SearchControl';\r\nimport TagList from './TagList';\r\nimport SearchGrid from './SearchGrid';\r\n\r\ninterface IProps {\r\n  match: any\r\n};\r\n\r\ninterface IState {\r\n    terms: string[],                              // Current search query terms to be displayed\r\n    searchFields: any,    \r\n    activeFilters: {[key:string]:Set<string>},    // Active tags used for filtering the search results\r\n    facets: {[key:string]:string[]},              // Available filtering tags for the current search terms (currently top 5 most common tags)\r\n    results: object[]                             // Search results\r\n};\r\n\r\nconst facetNames = [\"Culture\"];\r\n// const azureSearchUrl =\r\n//   'https://met-search.search.windows.net/indexes/met-index/docs?api-version=2019-05-06&';\r\n// const apiKey = 'E05256A72E0904582D2B7671DD7E2E3E';\r\n\r\nconst azureSearchUrl = \r\n'https://extern-search.search.windows.net/indexes/merged-art-search-3/docs/search?api-version=2019-05-06&';\r\nconst apiKey = '0E8FACE23652EB8A6634F02B43D42E55';\r\n\r\nexport class SearchPage extends React.Component<IProps, IState> {\r\n\r\n    constructor(props:IProps) {\r\n        super(props);\r\n        this.state = {\r\n          terms: ['*'], // Current search query to be displayed\r\n          searchFields: null,\r\n          activeFilters: {},\r\n          facets: {},\r\n          results: []\r\n        };\r\n        this.updateTerms = this.updateTerms.bind(this);\r\n        this.clearActiveFilters = this.clearActiveFilters.bind(this);\r\n        this.selectAndApplyFilters = this.selectAndApplyFilters.bind(this);\r\n    \r\n        //AppInsights.downloadAndSetup({ instrumentationKey: \"7ca0d69b-9656-4f4f-821a-fb1d81338282\" });\r\n        //AppInsights.trackPageView(\"Search Page\");\r\n    }\r\n    \r\n    /**\r\n     * Execute a search with no terms on startup\r\n     */\r\n    componentDidMount() {\r\n      const ids = this.props.match.params.id; // The IDs of the images found by NN\r\n      if (ids != null) {\r\n        this.setState({terms:this.uriToJSON(ids), searchFields:[\"Object_ID\"]}, () => this.executeSearch(true))\r\n      } else {\r\n        this.setState({terms:[\"*\"]}, () => this.executeSearch(true))\r\n      }\r\n    }\r\n\r\n    filterTerm(col:any, values:any) {\r\n        return `search.in(${col},  '${[...values].join(\"|\")}', '|')`\r\n    }\r\n    \r\n    /**\r\n     * This function creates a brand new search query request and refreshes all tags and results in the current state\r\n     * @param updateFacets whether to retrieve new filter tags after the search (e.g. French, Sculptures)\r\n     */\r\n    executeSearch(updateFacets:boolean):void {\r\n        let query= \"&search=\"+this.state.terms.join('|')\r\n    \r\n        if (this.state.searchFields!=null){\r\n          query = query+ \"&searchFields=\" + this.state.searchFields.join(\",\")\r\n        }\r\n        query = query+facetNames.map(f => \"&facet=\"+f+\",count:8\").join(\"\")\r\n        \r\n        let filtersToSearch = Object.entries(this.state.activeFilters)\r\n          .filter( (val:any) => \r\n            val[1].size > 0\r\n          )\r\n    \r\n        if (filtersToSearch.length !== 0){\r\n          query = query + \"&$filter=\" +  filtersToSearch.map( ([col, values],) =>\r\n              this.filterTerm(col, values)\r\n            ).join(\" or \")\r\n        }\r\n    \r\n        //console.log(query)\r\n        let self = this\r\n        fetch(azureSearchUrl + query, { headers: { \"Content-Type\": \"application/json\", 'api-key': apiKey,  } })\r\n          .then(function(response) {\r\n            return response.json();\r\n          })\r\n          .then(function(responseJson) {\r\n            if (updateFacets) {\r\n              self.setState({facets:responseJson[\"@search.facets\"], results:responseJson.value});\r\n            }\r\n            else {\r\n              self.setState({results:responseJson.value});\r\n            }\r\n            \r\n          });\r\n    }\r\n\r\n    uriToJSON(urijson:any) { return JSON.parse(decodeURIComponent(urijson)); }\r\n    \r\n    updateTerms(newTerms:any) {\r\n        this.setState({terms: newTerms, searchFields:null}, () => this.executeSearch(true));\r\n    }\r\n    \r\n    clearActiveFilters() {\r\n        this.setState({activeFilters: {}}, () => this.executeSearch(true));\r\n    }\r\n    \r\n    setUnion(a:any, b:any){\r\n        return new Set([...a, ...b])\r\n    }\r\n\r\n    /**\r\n     * Handler for selecting and applying filters immediately\r\n     * @param category the category of filter to update (e.g. Culture, Department)\r\n     * @param value the specific filter to toggle (e.g. French, Sculputres)\r\n     */\r\n    selectAndApplyFilters(category: any, value: any) {\r\n      let af = this.state.activeFilters;\r\n      \r\n      // Adds the new category to active filters if it does not exist\r\n      if (!Object.keys(af).includes(category)) {\r\n        af[category] = new Set();\r\n      }\r\n\r\n      // Toggles the active status of the filter\r\n      if (af[category].has(value)) {\r\n        af[category].delete(value);\r\n      }\r\n      else {\r\n        af[category].add(value);\r\n      }\r\n\r\n      // Update the state and search with the new active filters\r\n      this.setState({activeFilters: af}, ()=>this.executeSearch(false));\r\n    }\r\n    \r\n    // render() {\r\n    //     return (\r\n    //         <Stack className={topStackClass}>\r\n    //             <SearchControl updateTerms={this.updateTerms} />\r\n    //             <Separator />\r\n    //             <Stack horizontal>\r\n    //                 <Stack grow={1}>\r\n    //                     <TagList\r\n    //                     activeFilters={this.state.activeFilters}\r\n    //                     facets={this.state.facets}\r\n    //                     selectAndApplyFilters={this.selectAndApplyFilters}\r\n    //                     clearActiveFilters={this.clearActiveFilters}\r\n    //                     />\r\n    //                 </Stack>\r\n    //                 <Separator vertical />\r\n    //                 <Stack horizontal wrap grow={2}>\r\n    //                     <SearchGrid results={this.state.results} />\r\n    //                 </Stack>\r\n    //             </Stack>\r\n\r\n    //         </Stack>\r\n    //     )\r\n    // }\r\n\r\n    render() {\r\n      return (\r\n          <Stack className=\"search__topstack\">\r\n              <SearchControl updateTerms={this.updateTerms} />\r\n              <Separator />\r\n              <Stack horizontal>\r\n                <Stack>\r\n                  <TagList\r\n                  activeFilters={this.state.activeFilters}\r\n                  facets={this.state.facets}\r\n                  selectAndApplyFilters={this.selectAndApplyFilters}\r\n                  clearActiveFilters={this.clearActiveFilters}\r\n                  />\r\n                </Stack>\r\n                <Separator vertical />\r\n                <SearchGrid results={this.state.results} />\r\n              </Stack>\r\n\r\n          </Stack>\r\n      )\r\n    }\r\n}\r\n\r\nexport default SearchPage","import React from 'react';\r\nimport { Stack, Text, Separator, Pivot, PivotItem, IPivotStyles, PivotLinkFormat, PivotLinkSize } from 'office-ui-fabric-react';\r\nimport { Label } from 'office-ui-fabric-react/lib/Label';\r\n\r\ninterface IProps {\r\n};\r\n\r\ninterface IState {\r\n};\r\n\r\nconst pivotStyles: any = {\r\n    link: [\r\n      {\r\n        color: 'black'\r\n      }\r\n    ],\r\n    linkIsSelected: [\r\n      {\r\n        color: 'white',\r\n        backgroundColor: 'black',\r\n        fontWeight: 600,\r\n        selectors: {\r\n          ':before': {\r\n            borderBottom: 'none'\r\n          }\r\n        }\r\n      },\r\n    ]\r\n  };\r\n\r\nexport class AboutPage extends React.Component<IProps, IState> {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Stack className=\"about__panel\">\r\n                <Pivot styles={pivotStyles} aria-label=\"\" linkFormat={PivotLinkFormat.tabs} linkSize={PivotLinkSize.large}>\r\n                    <PivotItem className=\"about__pivot\" headerText=\"Instructions\">\r\n                        <Stack>\r\n                            <Text style={{\"textAlign\":\"left\", \"fontWeight\":\"bold\"}} variant=\"xLarge\">About Me</Text>\r\n                            <Text variant=\"medium\">\r\n                            Born and raised in South Detroit, I consider myself a city boy. When I turned 18, I ran away from home and took a midnight train to anywhere it would take me.\r\n                        When my train stopped, I headed into the first bar I could find. The room was fully enveloped in smoke and and smell of cheap perfume and wine, complete with a singer in the back.  \r\n                            </Text>\r\n                        </Stack>\r\n\r\n                    </PivotItem>\r\n                    <PivotItem className=\"about__pivot\" headerText=\"Algorithm\">\r\n                        <Stack>\r\n                            <Text style={{\"textAlign\":\"left\", \"fontWeight\":\"bold\"}} variant=\"xLarge\">This Is About It</Text>\r\n                            <Text variant=\"medium\">\r\n                                it makes things go fast\r\n\r\n                            </Text>\r\n                        </Stack>\r\n\r\n                    </PivotItem>\r\n                </Pivot>\r\n\r\n\r\n            </Stack>\r\n        )\r\n      }\r\n\r\n}\r\n\r\nexport default AboutPage","import React from 'react';\r\nimport {Stack, mergeStyles} from 'office-ui-fabric-react';\r\nimport NavBarNew from './NavBar/NavBarNew';\r\n\r\nimport ExplorePage from './ExplorePage/ExplorePage';\r\nimport SearchPage from \"./SearchPage/SearchPage\";\r\nimport AboutPage from \"./AboutPage/AboutPage\";\r\n\r\nimport {BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\r\nimport { initializeIcons } from 'office-ui-fabric-react';\r\n\r\ninitializeIcons();\r\n\r\nconst btmMargin = mergeStyles({\r\n    marginBottom: 15,\r\n});\r\n\r\ninterface IProps {};\r\n\r\ninterface IState {};\r\n\r\nexport class App extends React.Component {\r\n    render() {\r\n        return (\r\n            <Router basename={process.env.PUBLIC_URL}>\r\n                <Stack className=\"main\" role=\"main\">\r\n                    <Stack className={btmMargin}>\r\n                        <NavBarNew />\r\n                    </Stack>\r\n                    <Switch>\r\n                        <Route exact path=\"/search/:id\" component={SearchPage} />\r\n                        <Route exact path=\"/about\" component={AboutPage} />\r\n                        <Route path=\"/:data\" component={ExplorePage} /> \r\n                        <Route exact path=\"/\" component={ ExplorePage } />\r\n                    </Switch>\r\n                </Stack>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport { FluentCustomizations } from '@uifabric/fluent-theme';\r\nimport { Customizer, mergeStyles } from 'office-ui-fabric-react';\r\nimport { BreakpointsProvider } from 'react-with-breakpoints';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './main.scss';\r\n\r\n// Inject some global styles\r\nmergeStyles({\r\n  selectors: {\r\n    ':global(body), :global(html), :global(#root)': {\r\n      margin: 0,\r\n      padding: 0,\r\n      height: '100vh'\r\n    }\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <BreakpointsProvider>\r\n    <Customizer {...FluentCustomizations}>\r\n      <App />\r\n    </Customizer>\r\n  </BreakpointsProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}